sudo: false

language: c

addons:
    apt:
        packages: &common_pkgs
            - libpcre3
            - python3
        packages: &static_test_pkgs
            - *common_pkgs
            - doxygen
            - cppcheck
        packages: &arm_pkgs
            - *common_pkgs
            - gcc-arm-none-eabi
        packages: &x86_pkgs
            - *common_pkgs
            - qemu-system
            - g++-multilib
            - gcc-multilib
            - build-essential
            - python-pip
        packages: &avr_pkgs
            - *common_pkgs
            - gcc-avr
            - binutils-avr
            - avr-libc
        packages: &msp_pkgs
            - *common_pkgs
            - gcc-msp430

cache:
    apt: true
    directories:
        - $HOME/.ccache

env:
    global:
        - NPROC_MAX=8

matrix:
    include:
        - env:
            - BUILDTEST_MCU_GROUP=static-tests
          addons: {apt: {packages: *static_test_pkgs}}
        - env:
            - BUILDTEST_MCU_GROUP=arm7
          addons: {apt: {packages: *arm_pkgs}}
        - env:
            - BUILDTEST_MCU_GROUP=avr8
          addons: {apt: {packages: *avr_pkgs}}
        - env:
            - BUILDTEST_MCU_GROUP=cortex_m0_1
          addons: {apt: {packages: *arm_pkgs}}
        - env:
            - BUILDTEST_MCU_GROUP=cortex_m0_2
          addons: {apt: {packages: *arm_pkgs}}
        - env:
            - BUILDTEST_MCU_GROUP=cortex_m3_1
          addons: {apt: {packages: *arm_pkgs}}
        - env:
            - BUILDTEST_MCU_GROUP=cortex_m3_2
          addons: {apt: {packages: *arm_pkgs}}
        - env:
            - BUILDTEST_MCU_GROUP=cortex_m4_1
          addons: {apt: {packages: *arm_pkgs}}
        - env:
            - BUILDTEST_MCU_GROUP=cortex_m4_2
          addons: {apt: {packages: *arm_pkgs}}
        - env:
            - BUILDTEST_MCU_GROUP=msp430
          addons: {apt: {packages: *msp_pkgs}}
        - env:
            - BUILDTEST_MCU_GROUP=x86
          addons: {apt: {packages: *x86_pkgs}}

before_install:
    - source ./dist/tools/pr_check/check_labels.sh
    - test -z "$TRAVIS_PULL_REQUEST" || test "$BUILDTEST_MCU_GROUP" = "static-tests" || check_gh_label "Ready for CI build" || exit 1

install:
    - git config --global user.email "travis@example.com"
    - git config --global user.name "Travis CI"
    - test "$TRAVIS_BRANCH" = "master" || git fetch origin $TRAVIS_BRANCH:$TRAVIS_BRANCH

script:
    - ./dist/tools/travis-scripts/build_and_test.sh

notifications:
    email: false
